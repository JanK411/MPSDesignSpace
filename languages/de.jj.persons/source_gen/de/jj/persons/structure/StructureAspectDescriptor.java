package de.jj.persons.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptFemale = createDescriptorForFemale();
  /*package*/ final ConceptDescriptor myConceptMale = createDescriptorForMale();
  /*package*/ final ConceptDescriptor myConceptPerson = createDescriptorForPerson();
  /*package*/ final ConceptDescriptor myConceptPersons = createDescriptorForPersons();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptFemale, myConceptMale, myConceptPerson, myConceptPersons);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Female:
        return myConceptFemale;
      case LanguageConceptSwitch.Male:
        return myConceptMale;
      case LanguageConceptSwitch.Person:
        return myConceptPerson;
      case LanguageConceptSwitch.Persons:
        return myConceptPersons;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForFemale() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("de.jj.persons", "Female", 0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa9dL);
    b.class_(false, false, false);
    b.super_("de.jj.persons.structure.Person", 0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L);
    b.origin("r:c08da0ef-d12c-451d-a223-796f006325cd(de.jj.persons.structure)/7907174897418152605");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMale() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("de.jj.persons", "Male", 0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa9cL);
    b.class_(false, false, false);
    b.super_("de.jj.persons.structure.Person", 0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L);
    b.origin("r:c08da0ef-d12c-451d-a223-796f006325cd(de.jj.persons.structure)/7907174897418152604");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPerson() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("de.jj.persons", "Person", 0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L);
    b.class_(false, true, false);
    b.origin("r:c08da0ef-d12c-451d-a223-796f006325cd(de.jj.persons.structure)/7907174897418152599");
    b.version(2);
    b.property("fullName", 0x6dbbedacd97eaa9aL).type(PrimitiveTypeId.STRING).origin("7907174897418152602").done();
    b.associate("friend", 0x3307ddef0000b9f0L).target(0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L).optional(true).origin("3677151639338269168").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPersons() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("de.jj.persons", "Persons", 0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaaa1L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c08da0ef-d12c-451d-a223-796f006325cd(de.jj.persons.structure)/7907174897418152609");
    b.version(2);
    b.aggregate("persons", 0x6dbbedacd97eaaa2L).target(0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L).optional(true).ordered(true).multiple(true).origin("7907174897418152610").done();
    return b.create();
  }
}
