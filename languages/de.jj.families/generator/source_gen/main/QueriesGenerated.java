package main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.impl.query.QueryKeyImpl;
import java.util.Collection;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.IfMacroCondition;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static Object propertyMacro_GetValue_0_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa7dL, 0x6dbbedacd97eaa7eL, "name")) + SPropertyOperations.getString(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, "de.jj.families.structure.Family"), false, false), MetaAdapterFactory.getProperty(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa79L, "familyName"));
  }
  public static Object propertyMacro_GetValue_0_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa7bL, "father")), MetaAdapterFactory.getProperty(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa7dL, 0x6dbbedacd97eaa7eL, "name"));
  }
  public static Object propertyMacro_GetValue_0_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa80L, "mother")), MetaAdapterFactory.getProperty(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa7dL, 0x6dbbedacd97eaa7eL, "name")) + SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa79L, "familyName"));
  }
  public static Object propertyMacro_GetValue_0_3(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), MetaAdapterFactory.getProperty(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa7dL, 0x6dbbedacd97eaa7eL, "name")) + SPropertyOperations.getString(SNodeOperations.getNodeAncestor(_context.getNode(), MetaAdapterFactory.getConcept(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, "de.jj.families.structure.Family"), false, false), MetaAdapterFactory.getProperty(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa79L, "familyName"));
  }
  public static boolean ifMacro_Condition_0_0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa7bL, "father")) != null);
  }
  public static boolean ifMacro_Condition_0_1(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa80L, "mother")) != null);
  }
  public static Iterable<SNode> sourceNodesQuery_0_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa87L, "sons"));
  }
  public static Iterable<SNode> sourceNodesQuery_0_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa78L, 0x6dbbedacd97eaa83L, "daughters"));
  }
  public static Iterable<SNode> sourceNodesQuery_1_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), MetaAdapterFactory.getContainmentLink(0x87b7a63c996f47a5L, 0x90cf707ea7cf5605L, 0x6dbbedacd97eaa9eL, 0x6dbbedacd97eaaa0L, "families"));
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("7907174897418410744", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("7907174897418367227", new QueriesGenerated.SNsQ(i++));
    snsqMethods.put("7571624079459761076", new QueriesGenerated.SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    final String id = ((QueryKeyImpl) identity).getQueryNodeId().toString();
    if (!(snsqMethods.containsKey(id))) {
      return super.getSourceNodesQuery(identity);
    }
    return snsqMethods.get(id);
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_0(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_1(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_0(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("7571624079459786054", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L, 0x6dbbedacd97eaa9aL, "fullName"), "son"));
    pvqMethods.put("2847241969509938351", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L, 0x6dbbedacd97eaa9aL, "fullName"), "father"));
    pvqMethods.put("7571624079459886167", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L, 0x6dbbedacd97eaa9aL, "fullName"), "mother"));
    pvqMethods.put("7571624079459903571", new QueriesGenerated.PVQ(i++, MetaAdapterFactory.getProperty(0xe6fbaca3ec58466aL, 0xb23c1a37f8435d3fL, 0x6dbbedacd97eaa97L, 0x6dbbedacd97eaa9aL, "fullName"), "daughter"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(pvqMethods.containsKey(id))) {
      return super.getPropertyValueQuery(identity);
    }
    return pvqMethods.get(id);
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_0_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_0_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_0_2(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetValue_0_3(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("2847241969509923344", new QueriesGenerated.IfMC(i++));
    imcMethods.put("2847241969509967057", new QueriesGenerated.IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    final String id = identity.getTemplateNode().getNodeId().toString();
    if (!(imcMethods.containsKey(id))) {
      return super.getIfMacroCondition(identity);
    }
    return imcMethods.get(id);
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_0_0(ctx);
        case 1:
          return QueriesGenerated.ifMacro_Condition_0_1(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
}
